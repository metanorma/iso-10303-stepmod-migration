# Auto-generated by Cimas: Do not edit it manually!
# See https://github.com/metanorma/cimas
name: import-wg12

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.adoc'
    # tags:
    #   - '*'
  schedule:
    - cron: '0 2 * * *'  # every day at 1:00
  pull_request:
    paths-ignore:
      - '*.adoc'
      - .github/workflows/annotate.yml
      - .github/workflows/import-wg12.yml

jobs:
  import:
    name: import
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BOOST_CVS_SSH_PRIVATE_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.BOOST_CONSEIL_KNOWN_HOSTS }}
          config: |
            Host ${{ secrets.BOOST_CVS_HOST }}
              User ${{ secrets.BOOST_CVS_SSH_USER }}
              IdentityFile ~/.ssh/id_rsa

      - name: Test SSH
        run: |
          ssh ${{ secrets.BOOST_CVS_SSH_USER }}@${{ secrets.BOOST_CVS_HOST }} 'ls ../'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install cvs-fast-export

      - name: Setup Git
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "metanorma-ci"
          git config --global user.email "metanorma-ci@users.noreply.github.com"

      - name: reposurgeon - Cache reposurgeon
        id: cache-reposurgeon
        uses: actions/cache@v2
        with:
          path: reposurgeon
          key: ${{ runner.os }}-${{ hashFiles('reposurgeon-cache-key') }}

      - name: reposurgeon - Clone and build reposurgeon
        if: steps.cache-reposurgeon.outputs.cache-hit != 'true'
        run: |
          git clone https://gitlab.com/esr/reposurgeon
          cd reposurgeon
          git checkout 2f5f83ec63da34beaf8293434b5e1627366dfa7c
          sed -i 's/apt-get install /apt-get install -y /' Makefile
          make fullinstall
          make all

      - name: reposurgeon - Install reposurgeon
        working-directory: reposurgeon
        run: |
          sudo make install

      - name: rsync to stepmod-rsync/
        run: |
          rsync -avrPz -e ssh ${{ secrets.BOOST_CVS_SSH_USER }}@${{ secrets.BOOST_CVS_HOST }}:/stepmod/ stepmod-rsync

      - name: "[wg12-stepmod] Convert CVS to Git via reposurgeon"
        working-directory: stepmod-wg12
        env:
          TERM: xterm-256color
        run: |
          ln -s ../stepmod-rsync/stepmod stepmod-wg12-mirror
          make
          mv stepmod-wg12-git ../iso-10303-stepmod-wg12

      - name: "[wg12-stepmod] Add Git remote - GitHub iso-10303-stepmod-wg12"
        working-directory: iso-10303-stepmod-wg12
        run: |
          git remote add origin \
            https://${{ secrets.METANORMA_CI_USERNAME }}:${{ secrets.METANORMA_CI_PAT_TOKEN }}@github.com/metanorma/iso-10303-stepmod-wg12

      - name: "[wg12-stepmod] Add Git remote - ISO BitBucket wg12-stepmod"
        working-directory: iso-10303-stepmod-wg12
        run: |
          git remote add iso \
            https://${{ secrets.ISO_BITBUCKET_USERNAME_URLENCODED }}:${{ secrets.ISO_BITBUCKET_PAT_TOKEN_URLENCODED }}@sd.iso.org/bitbucket-pilot/scm/isotc184sc4/wg12-stepmod.git


      - name: "[wg12-stepmod] Git switch branch to main"
        working-directory: iso-10303-stepmod-wg12
        run: |
          git checkout main
          ls

      - name: "[wg12-stepmod] List git branches"
        working-directory: iso-10303-stepmod-wg12
        run: |
          git branch

      - name: "[wg12-stepmod] List git tags"
        working-directory: iso-10303-stepmod-wg12
        run: |
          git tag

      - name: "[wg12-stepmod] Git push to GitHub iso-10303-stepmod-wg12"
        if: github.ref == 'refs/heads/main'
        working-directory: iso-10303-stepmod-wg12
        run: |
          max=$(git log --oneline|wc -l); \
          for i in $(seq $max -500 1); do \
            echo $i; g=$(git log --reverse --oneline --skip $i -n1|perl -alne'print $F[0]'); \
            git push origin $g:refs/heads/gitconvert -f; \
          done

          for x in $(git branch | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push origin -f $y; \
          done

          for x in $(git tag | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push origin -f $y; \
          done

          git push origin :refs/heads/gitconvert -f

      - name: "[wg12-stepmod] Git push to ISO BitBucket wg12-stepmod"
        if: github.ref == 'refs/heads/main'
        working-directory: iso-10303-stepmod-wg12
        run: |
          max=$(git log --oneline|wc -l); \
          for i in $(seq $max -500 1); do \
            echo $i; g=$(git log --reverse --oneline --skip $i -n1|perl -alne'print $F[0]'); \
            git push iso $g:refs/heads/gitconvert -f; \
          done

          for x in $(git branch | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push iso -f $y; \
          done

          for x in $(git tag | tr -ds '*' '' | paste -d " " - - - - - - - - - - | tr -s ' ' '#'); do \
            y="${x//#/ }"; \
            echo $y; \
            git push iso -f $y; \
          done

          git push iso :refs/heads/gitconvert -f
